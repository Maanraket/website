{"version":3,"sources":["components/World/Television/Television.module.css","components/Camera/Camera.module.css","components/Player/Player.module.css","components/Wall/Wall.module.css","components/Transform/Transform.module.css","components/Intersectable/Intersectable.module.css","components/World/world.module.css","components/World/statue.png","components/World/SlidingDoor/sliding-door.png","util/uid.ts","hooks/useTick.tsx","collision/collision.ts","components/Camera/Camera.tsx","context/LookAtContext.ts","components/Player/Player.tsx","context/TransformContext.ts","components/Transform/Transform.tsx","components/Intersectable/Intersectable.tsx","components/Wall/Wall.tsx","util/radDeg.ts","components/Transform/Rotate.tsx","components/Transform/Translate.tsx","components/World/SlidingDoor/SlidingDoor.tsx","components/World/Television/Television.tsx","components/World/World.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","index","prefix","current","callbacks","Map","loop","forEach","c","key","delete","requestAnimationFrame","useTick","callback","getUid","useEffect","set","intersectables","projectOnto","onto","vector","ontolen","vec3","len","scale","dot","create","getRectangleRayIntersection","P0MinusR0","N","P","P0P","PP","ray","intersectable","subtract","position","cross","topSide","leftSide","DDotN","direction","t","add","sub","Q1","Q2","Q1Length","length","Q2Length","leftSideLength","topSideLength","getRectangleRayIntersections","type","intersections","Array","intersection","push","distance","sort","a","b","first","get","up","fromValues","Camera","perspective","props","useState","cameraPosition","mat4","sceneTransform","lookAt","cameraZOffset","perspectiveStyle","sceneTransformStyle","transform","join","transformOrigin","className","styles","crosshair","style","camera","scene","children","createContext","origin","forward","rotateLeft","fromYRotation","Math","PI","rotateRight","Player","setPosition","setDirection","directionKeys","useRef","backward","left","right","mousePosition","hasPointerLock","setHasPointerLock","setLookAt","setDirectionKey","keyboardEvent","code","value","window","addEventListener","removeEventListener","onMouseMove","e","movementX","movementY","onPointerLockChange","document","pointerLockElement","body","querySelector","requestPointerLock","target","nodeName","updatePosition","useCallback","newDirection","clone","rotateX","rotateY","deltaPosition","diff","negate","transformMat4","p","filter","i","onClick","intro","href","LookAtContext","Provider","Transform","parentWorldTransform","useContext","TransformContext","worldTransform","multiply","transformStyle","down","Intersectable","id","dimensions","setDimensions","uid","intersectableKey","measuredRef","node","offsetWidth","offsetHeight","ref","Wall","yRotation","fromTranslation","width","wall","degToRad","deg","Rotate","x","y","z","fromQuat","quat","fromEuler","Translate","SlidingDoor","setX","isOpen","setIsOpen","stopTick","abs","intersectionType","src","slidingDoor","height","Television","player","setPlayer","isPlaying","setIsPlaying","onReady","onIntersection","pauseVideo","playVideo","videoId","opts","side","back","furniture","Floor","fill","map","j","floor","Statue","statue","World","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8368751d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"side\":\"Television_side__2alSP\",\"back\":\"Television_back__14DFJ\",\"furniture\":\"Television_furniture__2Nb1W\",\"furnitureSide\":\"Television_furnitureSide__1ePRi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"camera\":\"Camera_camera__R7wHe\",\"scene\":\"Camera_scene__3xCWn\",\"crosshair\":\"Camera_crosshair__1wcq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Player_intro__vwbZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"Wall_wall__2DSA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transform\":\"Transform_transform__u4NgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intersectable\":\"Intersectable_intersectable__1_1H4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floor\":\"world_floor__12isS\"};","module.exports = __webpack_public_path__ + \"static/media/statue.93683e48.png\";","module.exports = __webpack_public_path__ + \"static/media/sliding-door.20fc4b30.png\";","let index = 0;\n\nexport default (prefix: string) => {\n\tconst current = index;\n\tindex++;\n\treturn `${prefix}-${current}`;\n};\n","import { useEffect } from 'react';\nimport getUid from '../util/uid';\n\ntype UseTickCallback = (stopCallback: () => boolean) => void;\n\nlet callbacks = new Map<string, UseTickCallback>();\n\nconst loop = () => {\n\tcallbacks.forEach((c, key) => c(() => callbacks.delete(key)));\n\trequestAnimationFrame(loop);\n};\n\nloop();\n\nconst useTick = (callback: UseTickCallback) => {\n\tconst key = getUid('tick');\n\tuseEffect(() => {\n\t\tcallbacks.set(key, callback);\n\t\treturn () => {\n\t\t\tcallbacks.delete(key);\n\t\t}\n\t}, [callback]);\n};\n\nexport default useTick;\n","import { vec3 } from 'gl-matrix';\n\ntype Intersectable = { // intersectable rectangle\n\tposition: vec3; // top left corner\n    topSide: vec3; // top right corner\n    leftSide: vec3; // bottom left corner\n    callback?: (type?: string) => void\n};\n\ntype Ray = {\n\tposition: vec3;\n\tdirection: vec3;\n};\n\ntype Intersection = {\n    key: string,\n    distance: number,\n}\n\n// for now we're dealing with a very small number of intersectables,\n// so it doesn't make sense to optimize this to something better (e.g. quadtree)\nconst intersectables = new Map<string, Intersectable>();\n\nexport const register = (key: string, intersectable: Intersectable) => {\n    intersectables.set(key, intersectable);\n};\n\nexport const unRegister = (key: string) => {\n    intersectables.delete(key);\n};\n\nconst projectOnto = (onto: vec3, vector: vec3): vec3 | null => {\n    const ontolen = vec3.len(onto);\n    const scale = vec3.dot(onto, vector) / ontolen;\n    if (scale < 0) return null; // we don't want to use the projection if the angle between the two is obtuse\n    return vec3.scale(vec3.create(), onto, scale / ontolen);\n}\n\n// console.log(projectOnto(\n//     vec3.fromValues(1, 0, 0),\n//     vec3.fromValues(-1, 1, 0)\n// ))\n\nconst getRectangleRayIntersection = (\n    () => {\n        // create a bunch of empty vec3s to reuse\n        const P0MinusR0 = vec3.create();\n        const N = vec3.create();\n        const P = vec3.create();\n        const P0P = vec3.create();\n        const PP = vec3.create();\n        return (ray: Ray, intersectable: Intersectable): number => {\n            vec3.subtract(P0MinusR0, intersectable.position, ray.position);\n            vec3.cross(N, intersectable.topSide, intersectable.leftSide);\n            const DDotN = vec3.dot(ray.direction, N);\n\n            const P0MinusR0DotN = vec3.dot(P0MinusR0, N);\n\n            const t = P0MinusR0DotN / DDotN;\n\n            vec3.add(P, ray.position, vec3.scale(PP, ray.direction, t));\n            vec3.sub(P0P, P, intersectable.position);\n\n            const Q1 = projectOnto(intersectable.leftSide, P0P);\n            const Q2 = projectOnto(intersectable.topSide, P0P);\n\n            if (!Q1 || !Q2) return -1;\n\n            const Q1Length = vec3.length(Q1);\n            const Q2Length = vec3.length(Q2);\n            const leftSideLength = vec3.length(intersectable.leftSide);\n            const topSideLength = vec3.length(intersectable.topSide);\n\n            if (Q1Length >= 0 && Q1Length <= leftSideLength\n                && Q2Length >= 0 && Q2Length <= topSideLength) {\n                return t;\n            }\n\n            return -1;\n        };\n    }\n)();\n\n// console.log(getRectangleRayIntersection(\n//     {\n//         position: vec3.fromValues(1, -1, 0),\n//         direction: vec3.fromValues(0, 0, 1)\n//     },\n//     {\n//         position: vec3.fromValues(0, 0, 1),\n//         topSide: vec3.fromValues(2, 0, 0),\n//         leftSide: vec3.fromValues(0, 2, 0)\n//     }\n// ));\n\n// expect no intersection\n\nexport const getRectangleRayIntersections = (ray: Ray, type?: string) => {\n    const intersections = Array<Intersection>();\n\tintersectables.forEach((intersectable, key) => {\n\t\tconst intersection = getRectangleRayIntersection(ray, intersectable);\n\t\tif (intersection > 0) {\n            // TODO: instead of sorting later, push items in the right spot\n            intersections.push({\n                distance: intersection,\n                key,\n            });\n\t\t}\n    });\n    intersections.sort((a, b) => a.distance < b.distance ? -1 : 1);\n    if (intersections.length) {\n        const first = intersectables.get(intersections[0].key);\n        if (first && first.callback) {\n            first.callback(type);\n        }\n    }\n\treturn intersections;\n};\n","import React, { useState } from 'react';\nimport styles from './Camera.module.css';\nimport { vec3, mat4 } from 'gl-matrix';\n\nconst up = vec3.fromValues(0, 1, 0);\n\nconst Camera: React.FC<{\n    position: vec3,\n    direction: vec3,\n    perspective: number\n}> = ({ position, direction, perspective, ...props }) => {\n    //for reuse\n    const [cameraPosition] = useState(vec3.create());\n    const [sceneTransform] = useState(mat4.create());\n    const [lookAt] = useState(vec3.create());\n\n    const cameraZOffset = vec3.fromValues(0, 0, -perspective);\n    const perspectiveStyle = { perspective: `${perspective}px` };\n\n    vec3.add(cameraPosition, position, cameraZOffset);\n    \n\tmat4.lookAt(\n        sceneTransform,\n        cameraPosition,\n        vec3.add(\n            lookAt,\n            cameraPosition,\n            direction\n        ),\n        up\n    );\n\n\tconst sceneTransformStyle = {\n\t\ttransform: `matrix3d(${sceneTransform.join(',')})`,\n\t\ttransformOrigin: `0 0 ${perspective}px`\n    };\n    \n    return (\n        <>\n            <div className={styles.crosshair}></div>\n            <div style={perspectiveStyle} className={styles.camera}>\n                <div style={sceneTransformStyle} className={styles.scene}>\n                    {props.children}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Camera;","import { createContext } from 'react';\n// which intersectable uid we're looking at\nexport default createContext<string | null>(null);","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport useTick from '../../hooks/useTick';\nimport { vec3, mat4 } from 'gl-matrix';\nimport { getRectangleRayIntersections } from '../../collision/collision';\nimport Camera from '../Camera/Camera';\nimport LookAtContext from '../../context/LookAtContext';\nimport styles from './Player.module.css';\n\n// TODO: clean up maths in here\nconst speed = 30;\nconst mouseSensitivity = 0.0015;\n\nconst origin = vec3.fromValues(0, 0, 0);\nconst forward = vec3.fromValues(0, 0, -1);\nconst rotateLeft = mat4.fromYRotation(mat4.create(), 0.5 * Math.PI);\nconst rotateRight = mat4.fromYRotation(mat4.create(), -0.5 * Math.PI);\n\nconst Player: React.FC = props => {\n\tconst [position, setPosition] = useState(vec3.fromValues(0, 0, 0));\n\tconst [direction, setDirection] = useState(vec3.fromValues(0, 0, -1));\n\t// refs for mousePosition and directionKeys so that updating doesn't cause re-render (re-render in rAF loop instead)\n\tconst directionKeys = useRef({\n\t\tforward: false,\n\t\tbackward: false,\n\t\tleft: false,\n\t\tright: false\n\t});\n\tconst mousePosition = useRef([0, 0]);\n\tconst [hasPointerLock, setHasPointerLock] = useState(false);\n\tconst [lookAt, setLookAt] = useState<string | null>(null);\n\t\n\t// keep direction keys in state so we can update position on every tick\n\tuseEffect(() => {\n\t\tconst setDirectionKey = (keyboardEvent: KeyboardEvent) => {\n\t\t\tconst { code, type } = keyboardEvent;\n\t\t\tconst value = type === 'keydown';\n\t\t\tif (code === 'KeyW' || code === 'ArrowUp') directionKeys.current.forward = value;\n\t\t\tif (code === 'KeyS' || code === 'ArrowDown') directionKeys.current.backward = value;\n\t\t\tif (code === 'KeyA' || code === 'ArrowLeft') directionKeys.current.left = value;\n\t\t\tif (code === 'KeyD' || code === 'ArrowRight') directionKeys.current.right = value;\n\t\t};\n\t\twindow.addEventListener('keydown', setDirectionKey);\n\t\twindow.addEventListener('keyup', setDirectionKey);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('keydown', setDirectionKey);\n\t\t\twindow.removeEventListener('keyup', setDirectionKey);\n\t\t};\n\t}, [directionKeys]);\n\n\t// change direction based on mouseMove\n\tuseEffect(() => {\n\t\tconst onMouseMove = (e: MouseEvent) => {\n\t\t\tif (!hasPointerLock) return;\n\t\t\tmousePosition.current = [\n\t\t\t\tmousePosition.current[0] + e.movementX,\n\t\t\t\tmousePosition.current[1] + e.movementY\n\t\t\t];\n\t\t};\n\t\twindow.addEventListener('mousemove', onMouseMove);\n\t\treturn () => window.removeEventListener('mousemove', onMouseMove);\n\t}, [mousePosition, hasPointerLock]);\n\n\t// only track mouse if there is pointer lock\n\tuseEffect(() => {\n\t\tconst onPointerLockChange = () => {\n\t\t\tsetHasPointerLock(!!document.pointerLockElement);\n\t\t};\n\t\tconst body = document.querySelector('body') as HTMLBodyElement;\n\t\tconst requestPointerLock = (e: MouseEvent) => {\n\t\t\tif ((e.target as Element).nodeName === 'A') return;\n\t\t\tbody.requestPointerLock();\n\t\t}\n\t\tdocument.addEventListener('mousedown', requestPointerLock);\n\t\tdocument.addEventListener('pointerlockchange', onPointerLockChange, false);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('mousedown', requestPointerLock);\n\t\t\tdocument.removeEventListener('pointerlockchange', onPointerLockChange, false);\n\t\t};\n\t}, []);\n\n\t// update direction based on mouse position, position based on direction\n\tconst updatePosition = useCallback(() => {\n\t\tif (!hasPointerLock) return;\n\t\tconst newDirection = vec3.clone(forward);\n\t\tvec3.rotateX(newDirection, newDirection, origin, mousePosition.current[1] * mouseSensitivity);\n\t\tvec3.rotateY(newDirection, newDirection, origin, -mousePosition.current[0] * mouseSensitivity);\n\t\tsetDirection(newDirection);\n\n\t\tconst deltaPosition = vec3.fromValues(newDirection[0], 0, newDirection[2]);\n\t\tvec3.scale(deltaPosition, deltaPosition, speed);\n\n\t\t// strafing with keys\n\t\tconst diff = vec3.create();\n\t\tif (directionKeys.current.forward) vec3.add(diff, diff, deltaPosition);\n\t\tif (directionKeys.current.backward) vec3.add(diff, diff, vec3.negate(vec3.create(), deltaPosition));\n\t\tif (directionKeys.current.left) vec3.add(diff, diff, vec3.transformMat4(vec3.create(), deltaPosition, rotateLeft));\n\t\tif (directionKeys.current.right) vec3.add(diff, diff, vec3.transformMat4(vec3.create(), deltaPosition, rotateRight));\n\t\t\n\t\tsetPosition(p => {\n\t\t\t// before updating position, check if we're going through a wall\n\t\t\tconst intersections = getRectangleRayIntersections({\n\t\t\t\tposition: p,\n\t\t\t\tdirection: diff\n\t\t\t})\n\t\t\t.filter(i => i.distance > 0 && i.distance < 1)\n\t\t\t.sort();\n\n\t\t\tconst offset = 0.05; // small offset to prevent players from being able to look through elements when very close\n\n\t\t\tif (intersections.length) {\n\t\t\t\tvec3.scale(diff, diff, (intersections[0].distance - offset) / 1);\n\t\t\t}\n\t\t\treturn vec3.add(vec3.create(), p, diff);\n\t\t});\n\t}, [directionKeys, setDirection, setPosition, hasPointerLock]);\n\n\tuseEffect(() => {\n\t\tconst intersections = getRectangleRayIntersections({\n\t\t\tposition,\n\t\t\tdirection\n\t\t})\n\t\t.filter(i => i.distance > 0)\n\n\t\tif (intersections.length) {\n\t\t\tsetLookAt(intersections[0].key);\n\t\t} else {\n\t\t\tsetLookAt(null);\n\t\t}\n\t}, [direction, position]);\n\n\tuseEffect(() => {\n\t\tconst onClick = () => {\n\t\t\tgetRectangleRayIntersections({\n\t\t\t\tposition,\n\t\t\t\tdirection\n\t\t\t}, 'click');\n\t\t}\n\t\twindow.addEventListener('click', onClick);\n\t\treturn () => window.removeEventListener('click', onClick);\n\t}, [position, direction]);\n\n\tuseTick(updatePosition);\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\t!hasPointerLock ? \n\t\t\t\t<div className={styles.intro}>\n\t\t\t\t\tClick anywhere to start. <br />\n\t\t\t\t\tMove your cursor to look around. <br />\n\t\t\t\t\tUse WASD or the arrow keys to walk around. <br />\n\t\t\t\t\tWorks best in Firefox at time of writing. <br />\n\t\t\t\t\t<a href=\"https://github.com/ath92/virtual-doom\" target=\"_blank\">GitHub</a>\n\t\t\t\t</div>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t\n\t\t\t<Camera position={position} direction={direction} perspective={750}>\n\t\t\t\t<LookAtContext.Provider value={lookAt}>\n\t\t\t\t\t{props.children}\n\t\t\t\t</LookAtContext.Provider>\n\t\t\t</Camera>\n\t\t</>\n\t);\n};\n\nexport default Player;\n","import { createContext } from 'react';\nimport { mat4 } from 'gl-matrix';\n\nexport default createContext<mat4>(mat4.create());","import React, { useState, useContext } from 'react';\nimport { mat4 } from 'gl-matrix';\nimport TransformContext from '../../context/TransformContext';\nimport styles from './Transform.module.css';\n\nconst Transform: React.FC<{\n    value: mat4\n}> = ({ value, ...props }) => {\n    const parentWorldTransform = useContext(TransformContext);\n    const [worldTransform] = useState(mat4.create()); // for reuse\n\n    mat4.multiply(worldTransform, parentWorldTransform, value);\n    \n    const transformStyle = {\n        transform: `matrix3d(${value.join(',')})`,\n    };\n\n    return (\n        <div style={transformStyle} className={styles.transform}>\n            <TransformContext.Provider value={worldTransform}>\n                { props.children }\n            </TransformContext.Provider>\n        </div>\n    );\n};\n\nexport default Transform;","import React, { useContext, useCallback, useState, useEffect } from 'react';\nimport TransformContext from '../../context/TransformContext';\nimport styles from './Intersectable.module.css';\nimport { vec3 } from 'gl-matrix';\nimport { register, unRegister } from '../../collision/collision';\nimport uid from '../../util/uid';\n\nconst origin = vec3.fromValues(0, 0, 0);\nconst right = vec3.fromValues(1, 0, 0);\nconst down = vec3.fromValues(0, 1, 0);\n\nconst Intersectable: React.FC<{\n    callback?: (type?: string) => void,\n    id?: string\n}> = ({ callback, id, ...props }) => {\n    const [dimensions, setDimensions] = useState([0, 0]);\n    const worldTransform = useContext(TransformContext);\n    const [intersectableKey] = useState(id || uid('inter'));\n    // initialize vectors as state so they can be reused\n    const [[position, topSide, leftSide]] = useState([vec3.create(), vec3.create(), vec3.create()]);\n  \n    const measuredRef = useCallback(node => {\n        if (node !== null) {\n            setDimensions([node.offsetWidth, node.offsetHeight]);\n        }\n    }, [setDimensions]);\n\n    useEffect(() => {\n        // register intersectable\n        vec3.transformMat4(position, origin, worldTransform);\n        vec3.scale(topSide, right, dimensions[0]);\n        vec3.transformMat4(topSide, topSide, worldTransform);\n        vec3.sub(topSide, topSide, position);\n        vec3.scale(leftSide, down, dimensions[1]);\n        vec3.transformMat4(leftSide, leftSide, worldTransform);\n        vec3.sub(leftSide, leftSide, position);\n\n        register(intersectableKey, { position, leftSide, topSide, callback });\n    }, [dimensions, worldTransform, intersectableKey, callback, position, topSide, leftSide]);\n\n    // only unregister when component unmounts\n    useEffect(() => () => unRegister(intersectableKey), [intersectableKey]);\n\n    // maybe add a mutationObserver so dimensions changing because of a DOM change is picked up on?\n    return (\n        <div ref={measuredRef} className={styles.intersectable}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Intersectable;\n","import React from 'react';\nimport { vec3, mat4 } from 'gl-matrix';\nimport styles from './Wall.module.css';\nimport Transform from '../Transform/Transform';\nimport Intersectable from '../Intersectable/Intersectable';\n\n\nconst Wall: React.FC<{\n\tposition: vec3;\n    yRotation?: number;\n    length?: number;\n}> = ({ yRotation = 0, position, length = 1000, ...props }) => {\n\tconst transform = mat4.fromTranslation(mat4.create(), position);\n\tmat4.rotateY(transform, transform, yRotation); // -yRotation because y is flipped\n    \n    const style = {\n        width: `${length}px`\n    };\n\n\treturn (\n\t\t<Transform value={transform}>\n            <Intersectable>\n                <div className={styles.wall} style={style}>\n                    {props.children}\n                </div>\n            </Intersectable>\n\t\t</Transform>\n\t);\n};\n\nexport default Wall;\n","export const radToDeg = (rad: number) => rad * 180 / Math.PI;\nexport const degToRad = (deg: number) => deg / 180 * Math.PI;","import React from 'react';\nimport Transform from './Transform';\nimport { mat4, quat } from 'gl-matrix';\n\n// Euler rotations\nconst Rotate: React.FC<{\n    x?: number,\n    y?: number,\n    z?: number\n}> = ({ x = 0, y = 0, z = 0, ...props }) => {\n    return <Transform value={ mat4.fromQuat(mat4.create(), quat.fromEuler(quat.create(), x, y, z ))}>\n        { props.children }\n    </Transform>;\n};\n\nexport default Rotate;","import React from 'react';\nimport Transform from './Transform';\nimport { vec3, mat4 } from 'gl-matrix';\n\nconst Translate: React.FC<{\n    x?: number,\n    y?: number,\n    z?: number\n}> = ({ x = 0, y = 0, z = 0, ...props}) => {\n    return <Transform value={mat4.fromTranslation(mat4.create(), vec3.fromValues(x, y, z))}>\n        {props.children}\n    </Transform>;\n};\n\nexport default Translate;","import React, { useState, useContext } from 'react';\nimport useTick from '../../../hooks/useTick';\nimport Translate from '../../Transform/Translate';\nimport Intersectable from '../../Intersectable/Intersectable';\nimport LookAtContext from '../../../context/LookAtContext';\nimport getUid from '../../../util/uid';\nimport slidingDoor from './sliding-door.png';\n\nconst SlidingDoor: React.FC<{\n    width?: number\n}> = ({ width = 1000 }) => {\n\tconst [x, setX] = useState(0);\n    const [isOpen, setIsOpen] = useState(false);\n    const [id] = useState(getUid('door'));\n    const lookAt = useContext(LookAtContext);\n\n\tconst targetThreshold = 2; // rounding\n\n\tconst toggleOpen = (intersectionType?: string) => {\n\t\tif (intersectionType === 'click') {\n\t\t\tsetIsOpen(!isOpen);\n\t\t}\n\t}\n\n    useTick((stopTick) => {\n        const target = isOpen ? width : 0;\n        if (Math.abs(x - target) < targetThreshold) {\n            setX(target);\n            stopTick();\n            return;\n        }\n        setX(x + (target - x) / 5);\n    });\n\n\treturn (\n\t\t<Translate x={x}>\n\t\t\t<Intersectable callback={toggleOpen} id={id}>\n                <img\n                    src={slidingDoor}\n                    width={width}\n                    style={{\n                        filter: lookAt !== id ? 'brightness(0.9)' : 'none'\n                    }}\n                    height=\"1000\"\n                />\n\t\t\t</Intersectable>\n\t\t</Translate>\n\t)\n}\n\nexport default SlidingDoor;","import React, { useState, useCallback } from 'react';\nimport Rotate from '../../Transform/Rotate';\nimport Translate from '../../Transform/Translate';\nimport Intersectable from '../../Intersectable/Intersectable';\nimport Youtube from 'react-youtube';\nimport styles from './Television.module.css';\n\nconst Television: React.FC = () => {\n\tconst [player, setPlayer] = useState<{ playVideo: () => void, pauseVideo: () => void } | null>(null);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\t\n\tconst dimensions = { \n\t\twidth: `500px`,\n\t\theight: `320px`\n\t};\n\n\tconst onReady = useCallback(e => {\n\t\tsetPlayer(e.target);\n\t}, [setPlayer]);\n\n\tconst onIntersection = useCallback((type?: string) => {\n\t\tif (type === 'click' && player !== null) {\n\t\t\tif (isPlaying) {\n\t\t\t\tplayer.pauseVideo();\n\t\t\t} else {\n\t\t\t\tplayer.playVideo();\n\t\t\t}\n\t\t\tsetIsPlaying(!isPlaying);\n\t\t}\n\t}, [player, setIsPlaying, isPlaying]);\n\n\treturn (\n        <>\n            <Intersectable callback={onIntersection} id=\"video\">\n                <div style={dimensions}>\n                    <Youtube\n                        videoId=\"ICcFMBzOnYs\"\n                        opts={{ ...dimensions }}\n                        onReady={onReady}\n                    ></Youtube>\n                </div>\n            </Intersectable>\n\n            <Translate z={-320}>\n                <Rotate y={-90}>\n                    <div className={styles.side}></div>\n                </Rotate>\n                <Translate x={500}>\n                    <Rotate y={-90}>\n                        <div className={styles.side}></div>\n                    </Rotate>\n                </Translate>\n                <Translate y={80}>\n                    <div className={styles.back}></div>\n                </Translate>\n            </Translate>\n\n            <Translate y={320}>\n                <div className={styles.furniture}></div>\n                <Translate z={-320}>\n                    <div className={styles.furniture}></div>\n                </Translate>\n            </Translate>\n        </>\n\t)\n}\n\nexport default Television;","import React from 'react';\nimport Wall from '../Wall/Wall';\nimport Button from '../Button/Button';\nimport { vec3 } from 'gl-matrix';\nimport styles from './world.module.css';\nimport { degToRad } from '../../util/radDeg';\nimport Rotate from '../Transform/Rotate';\nimport Translate from '../Transform/Translate';\nimport statue from './statue.png';\nimport SlidingDoor from './SlidingDoor/SlidingDoor';\nimport Television from './Television/Television';\n\n// magic numbers everywhere in this file so it's easier to iterate\n\nconst Floor: React.FC = () => {\n\treturn (\n\t\t<Translate y={1000}>\n\t\t\t<Rotate x={90}>\n\t\t\t{\n\t\t\t\tArray(5).fill(0).map((i, x) => (\n\t\t\t\t\tArray(12).fill(0).map((j, y) => (\n\t\t\t\t\t\t<Translate x={x * 400 - 1000} y={y * -400} key={`${x}${y}`}>\n\t\t\t\t\t\t\t<div className={styles.floor}></div>\n\t\t\t\t\t\t</Translate>\n\t\t\t\t\t))\n\t\t\t\t))\n\t\t\t}\n\t\t\t</Rotate>\n\t\t</Translate>\n\t)\n};\n\nconst Statue: React.FC = () => {\n\treturn (\n\t\t<Translate z={-2750} x={650}>\n\t\t\t<Rotate y={-35}>\n\t\t\t\t<img src={statue} height=\"1000\" />\n\t\t\t</Rotate>\n\t\t</Translate>\n\t);\n}\n\nconst World: React.FC = () => {\n\treturn (\n\t\t<Translate y={-700}>\n\t\t\t<Floor />\n\t\t\t{/* <Button position={vec3.fromValues(0, 0, -500)} yRotation={0.5}>heya</Button> */}\n\t\t\t{/* right wall */}\n\t\t\t<Wall position={vec3.fromValues(1000, 0, -1000)} yRotation={degToRad(-90)} length={1000} />\n\t\t\t<Wall position={vec3.fromValues(1000, 0, -2000)} yRotation={degToRad(-90)} length={1000} />\n\t\t\t<Wall position={vec3.fromValues(1000, 0, -3000)} yRotation={degToRad(-90)} length={1000} />\n\t\t\t<Wall position={vec3.fromValues(1000, 0, -4000)} yRotation={degToRad(-90)} length={1000} />\n\t\t\t{/* left wall */}\n\t\t\t<Wall position={vec3.fromValues(-1000, 0, 0)} yRotation={degToRad(90)} length={1000} />\n\t\t\t<Wall position={vec3.fromValues(-1000, 0, -1000)} yRotation={degToRad(90)} length={1000} />\n\t\t\t<Wall position={vec3.fromValues(-1000, 0, -2000)} yRotation={degToRad(90)} length={1000} />\n\t\t\t<Wall position={vec3.fromValues(-1000, 0, -3000)} yRotation={degToRad(90)} length={1000} />\n\n\t\t\t{/* Middle wall */}\n\t\t\t<Wall position={vec3.fromValues(-400, 0, -3000)} length={1400} />\n\t\t\t<Translate z={-2999} x={-1000}>\n\t\t\t\t<SlidingDoor width={600} />\n\t\t\t</Translate>\n\n\t\t\t<Statue />\n\n\t\t\t<Translate z={-3799} y={500}>\n\t\t\t\t<Rotate y={-60}>\n\t\t\t\t\t<Television />\n\t\t\t\t</Rotate>\n\t\t\t</Translate>\n\n\t\t\t{/* Back wall */}\n\t\t\t<Wall position={vec3.fromValues(-1000, 0, -4000)} length={1000} />\n\t\t\t<Wall position={vec3.fromValues(0, 0, -4000)} length={1000} />\n\t\t</Translate>\n\t);\n};\n\nexport default World;\n","import React from 'react';\nimport Player from './components/Player/Player';\nimport World from './components/World/World';\nimport './App.css';\nimport './global.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Player>\n        <World></World>\n      </Player>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}